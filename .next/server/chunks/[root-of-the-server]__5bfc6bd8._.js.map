{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 108, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/ADMIN/Desktop/workspace/boyalonetech/src/lib/supabaseClient.ts"],"sourcesContent":["import { createClient } from \"@supabase/supabase-js\";\r\n\r\nconst supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL!;\r\nconst supabaseAnonKey = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!;\r\n\r\nexport const supabase = createClient(supabaseUrl, supabaseAnonKey);\r\n"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM;AACN,MAAM;AAEC,MAAM,WAAW,CAAA,GAAA,yLAAA,CAAA,eAAY,AAAD,EAAE,aAAa","debugId":null}},
    {"offset": {"line": 122, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/ADMIN/Desktop/workspace/boyalonetech/src/app/api/messages/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from \"next/server\";\r\nimport { supabase } from \"@/lib/supabaseClient\";\r\n\r\n// GET - Fetch all messages\r\nexport async function GET() {\r\n  try {\r\n    const { data: messages, error: fetchError } = await supabase\r\n      .from(\"messages\")\r\n      .select(\"*\")\r\n      .order(\"created_at\", { ascending: false });\r\n\r\n    if (fetchError) {\r\n      console.error(\"Supabase GET error:\", fetchError);\r\n      return NextResponse.json(\r\n        { success: false, error: fetchError.message },\r\n        { status: 500 }\r\n      );\r\n    }\r\n\r\n    return NextResponse.json({\r\n      success: true,\r\n      messages: messages.map((msg) => ({\r\n        id: msg.id,\r\n        from: msg.from_name, // adjust if DB column is different\r\n        email: msg.email,\r\n        subject: msg.subject,\r\n        message: msg.message,\r\n        date: msg.created_at,\r\n        read: msg.read,\r\n      })),\r\n    });\r\n  } catch (error) {\r\n    console.error(\"GET API error:\", error);\r\n    return NextResponse.json(\r\n      { success: false, error: \"Internal server error\" },\r\n      { status: 500 }\r\n    );\r\n  }\r\n}\r\n\r\n// DELETE - Delete a message\r\nexport async function DELETE(request: NextRequest) {\r\n  try {\r\n    const body = await request.json();\r\n    const { id } = body;\r\n\r\n    if (!id) {\r\n      return NextResponse.json(\r\n        { success: false, error: \"Message ID is required\" },\r\n        { status: 400 }\r\n      );\r\n    }\r\n\r\n    const { error: deleteError } = await supabase\r\n      .from(\"messages\")\r\n      .delete()\r\n      .eq(\"id\", id);\r\n\r\n    if (deleteError) {\r\n      console.error(\"Supabase DELETE error:\", deleteError);\r\n      return NextResponse.json(\r\n        { success: false, error: deleteError.message },\r\n        { status: 500 }\r\n      );\r\n    }\r\n\r\n    return NextResponse.json({\r\n      success: true,\r\n      message: \"Message deleted successfully\",\r\n    });\r\n  } catch (error) {\r\n    console.error(\"DELETE API error:\", error);\r\n    return NextResponse.json(\r\n      { success: false, error: \"Internal server error\" },\r\n      { status: 500 }\r\n    );\r\n  }\r\n}\r\n\r\n// PUT - Update message (mark as read/unread)\r\nexport async function PUT(request: NextRequest) {\r\n  try {\r\n    const body = await request.json();\r\n    const { id, read } = body;\r\n\r\n    if (!id) {\r\n      return NextResponse.json(\r\n        { success: false, error: \"Message ID is required\" },\r\n        { status: 400 }\r\n      );\r\n    }\r\n\r\n    const { data, error: updateError } = await supabase\r\n      .from(\"messages\")\r\n      .update({ read })\r\n      .eq(\"id\", id)\r\n      .select();\r\n\r\n    if (updateError) {\r\n      console.error(\"Supabase PUT error:\", updateError);\r\n      return NextResponse.json(\r\n        { success: false, error: updateError.message },\r\n        { status: 500 }\r\n      );\r\n    }\r\n\r\n    return NextResponse.json({\r\n      success: true,\r\n      data,\r\n    });\r\n  } catch (error) {\r\n    console.error(\"PUT API error:\", error);\r\n    return NextResponse.json(\r\n      { success: false, error: \"Internal server error\" },\r\n      { status: 500 }\r\n    );\r\n  }\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}}]
}